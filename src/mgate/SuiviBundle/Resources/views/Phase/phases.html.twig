{% extends "mgateSuiviBundle::layout.html.twig" %}

{% block javascripts %}

    {{ form_javascript(form) }}
{% endblock %}


{% block content_bundle %}
<script src="http://code.jquery.com/jquery-1.8.3.min.js"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>

<script type="text/javascript" src="{{ asset('bundles/mgatesuivi/tiny_mce/jquery.tinymce.js') }}"></script>
<script type="text/javascript" src="{{ asset('bundles/mgatesuivi/js/jquery.ui.datepicker-fr.js') }}"></script>

<link rel="stylesheet" href="http://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css" />
    

<h2>Modifier les {{ form.phases | length  }} phases</h2>
<form method="POST" {{ form_enctype(form) }}>
    {# affiche l'unique champ de la tache : description #}
    {#{ form_row(form.description) }#}
        
<p><br /><input type="submit" value="Ajouter une phase" name="add"/></p>
    <div class="boutonAdd"></div>
    <u1 class="phases" id="phases" data-prototype="{{ form_widget(form.phases.vars.prototype) | e }}">
        {# itere sur chaque tag existant et affiche son unique champ : name #}
        {% for phase in form.phases %}
            <li>
                <h4 class="titrePhase"></h4>{{ form_widget(phase) }}
            </li><br />
        {% endfor %}
    </u1>
    <br />
    <div class="boutonAdd"></div>
    {{ form_rest(form) }}

    
<script type="text/javascript">
    // RecupÃ¨re le div qui contient la collection de tags
    var collectionHolder = $('.phases');
    
    function updateOrder() {
        $('input.position').each(function(i) {
            $(this).val( i );
        });
        $('.titrePhase').each(function(i) {
            $(this).text( 'Phase n°'+(i+1) );
        });
    }


    jQuery(document).ready(function() {
        
        updateOrder();
       
        collectionHolder.find('li').each(function() {
            addTagFormDeleteLink($(this));
        });
        
        collectionHolder.sortable({
            // limitons les deplacements sur l'axe des ordonnees, ce sera plus propre
            axis: 'y',

            // Il faut cliquer sur cet element pour pouvoir initier le drag'n'drop
            //handle: '.sort-button',

            // Creons un joli trou style lors des deplacements
            placeholder: 'ui-state-highlight',
            forcePlaceholderSize: true,

            // Cette fonction permet a  notre ligne de conserver son formatage lors du deplacement
            // Pas vraiment utile, mais plus agreable
            helper: function(e, tr)
            {
              var $originals = tr.children();
              var $helper = tr.clone();
              $helper.children().each(function(index)
              {
                // Set helper cell sizes to match the original sizes
                $(this).width($originals.eq(index).width())
              });
              return $helper;
            },

            // La fonction appele quand un element change de position
            // C'est le code vraiment utile, en fait
            update: function(){             
                updateOrder();
            }
            
        });
        

    });
    
    function addTagFormDeleteLink($tagFormLi) {
        var $delete = $('<button id="myButtonDelete">delete this phase</button>');
        var $up = $('<button id="myButtonUp">▲</button>');
        var $down = $('<button id="myButtonDown">▼</button>');
        $tagFormLi.append($delete);
        $tagFormLi.append($up);
        $tagFormLi.append($down);

        $delete.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // remove the li for the tag form
            $tagFormLi.remove();
            updateOrder();
        });
        
        $up.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            $tagFormLi.prev().before($tagFormLi);
            updateOrder();
        });
        $down.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            $tagFormLi.next().after($tagFormLi);
            updateOrder();
        });
    }
    
</script>


<p><br /><input type="submit" value="Ajouter une phase" name="add"/></p>

    <p><br /><input type="submit" value="Enregistrer les phases" /></p>
</form>

<a href="{{ path('mgateSuivi_etude_voir', {'id': etude.id}) }}">Retour à l'étude</a>


    

{% endblock %}